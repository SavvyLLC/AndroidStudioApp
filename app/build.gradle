apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'




android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.codepath.jmckinley.savvyfirebasereboot"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {

    def butterknifeVersion = '10.2.0'
    def daggerVersion = '2.25.4'
    def daggerAndroidProcessor = "com.google.dagger:dagger-android-processor:$daggerVersion"
    def daggerCompiler = "com.google.dagger:dagger-compiler:$daggerVersion"
    def retrofitVersion = '2.6.4'
    def espressoVersion = '3.2.0'
    def espresso = "androidx.test.espresso:espresso-core:$espressoVersion"
    def androidXTest = '1.2.0'
    def testCore = "androidx.test:core:$androidXTest"
    def junitExtensions = 'androidx.test.ext:junit-ktx:1.1.1'
    def lifecycleVersion = '2.2.0'
    def coroutinesAndroidVersion = '1.3.3'



    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.firebase:firebase-database:19.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'com.google.firebase:firebase-auth:19.3.0'
    implementation 'com.google.firebase:firebase-firestore:21.4.2'
    implementation 'com.google.firebase:firebase-storage:19.1.1'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.lorentzos.swipecards:library:1.0.9'

    def preference_version = "1.1.1"
    implementation "androidx.preference:preference:$preference_version"

    // for firebase messaging
    implementation 'com.google.firebase:firebase-core:17.2.3'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-storage-ktx:19.1.1'
    implementation 'com.google.firebase:firebase-database-ktx:19.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.2'

    // misc. dependencies
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation "androidx.core:core-ktx:1.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.30"

    implementation 'com.google.android.gms:play-services-tasks:9.6.1'

    //Twillio SDK
    implementation 'com.facebook.conceal:conceal:2.0.2@aar'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesAndroidVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesAndroidVersion"
    // TODO Remove as part of https://issues.corp.twilio.com/browse/AHOYAPPS-445
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutinesAndroidVersion"
    implementation 'com.twilio:twilio-android-env:1.0.0'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycleVersion"
    implementation "androidx.fragment:fragment:1.2.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "com.appyvet:materialrangebar:1.3"
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "com.google.firebase:firebase-core:17.2.2"
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation "com.crashlytics.sdk.android:crashlytics:2.10.1"
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    implementation 'com.twilio:video-android:5.5.1'



    //internalImplementation "com.microsoft.appcenter:appcenter-distribute:2.5.1"

    kapt daggerAndroidProcessor
    kapt daggerCompiler
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    testImplementation testCore
    testImplementation espresso
    testImplementation junitExtensions
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesAndroidVersion"
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    kaptTest daggerAndroidProcessor
    annotationProcessor daggerCompiler

    androidTestImplementation testCore
    androidTestImplementation espresso
    androidTestImplementation junitExtensions
    androidTestImplementation "androidx.test:runner:$androidXTest"
    androidTestImplementation "androidx.test:rules:$androidXTest"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.9.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

}

def getLocalProperty(key) {
    if (project.rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def value = properties.getProperty(key)
        return value
    } else {
        logger.log(LogLevel.WARN, "Could not find local.properties in " +
                project.rootProject.toString() + ". Community variant cannot connect to room" +
                " without credentials")
    }
}

apply plugin: 'com.google.gms.google-services'
